<Styles xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <!--  Add Controls for Previewer Here  -->
        <Border
            Width="600"
            Padding="20"
            Background="{DynamicResource PrimaryBackgroundGradient}">
            <Grid ColumnDefinitions="*,*">
                <StackPanel Spacing="15">
                    <Button Content="Normal" />
                    <Button Classes="small" Content="Small" />
                    <Button Classes="smaller" Content="Smaller" />
                    <Button Classes="subtle" Content="Subtle" />
                    <IconButton
                        Classes="subtle"
                        Content="Icon Subtle"
                        IconText="&#xe2c2;" />
                    <IconButton
                        Classes="outline"
                        Content="Icon Outline"
                        IconText="&#xe2c2;" />
                    <Button Classes="outline" Content="Outline" />
                    <Button Classes="alert" Content="Alert" />
                    <Button Classes="outline alert" Content="Alert" />
                    <Button Classes="danger" Content="Danger" />
                    <Button Classes="outline danger" Content="Danger" />
                    <Button Classes="success" Content="Success" />
                    <Button Classes="outline success" Content="Success" />

                    <IconButton
                        HorizontalAlignment="Stretch"
                        Content="Icon Stretch"
                        IconText="&#xe2c2;" />

                    <Button>
                        <Label Classes="icon-only" Content="&#xe272;" />
                    </Button>

                    <Button Classes="transparent">
                        <Label Classes="icon-only" Content="&#xe272;" />
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="1" Spacing="15">
                    <CheckBox />
                    <CheckBox>Has Content</CheckBox>
                </StackPanel>
            </Grid>
        </Border>
    </Design.PreviewWith>

    <!--  Add Styles Here  -->

    <!--  Button Styles  -->
    <Style Selector=":is(Button)">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="5 5 5 5" />
        <Setter Property="BorderThickness" Value="{DynamicResource PrimaryBorderThickness}" />
        <Setter Property="Effect">
            <DropShadowEffect BlurRadius="30" Opacity="0.3" />
        </Setter>
    </Style>

    <!--  Small button  -->
    <Style Selector=":is(Button).small">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Padding" Value="6 2 6 2" />
    </Style>

    <!--  Smaller button  -->
    <Style Selector=":is(Button).smaller">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Padding" Value="3 0 3 0" />
    </Style>

    <!--  Normal button  -->
    <Style Selector=":is(Button):not(CheckBox)">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundSubtle}" />
        <Setter Property="Background" Value="{DynamicResource ActiveGradient}" />
    </Style>

    <!--  Normal button (hover)  -->
    <Style Selector=":is(Button):not(CheckBox):pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}" />
    </Style>
    <Style Selector=":is(Button):not(CheckBox):pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}" />
    </Style>

    <!--  Alert button  -->
    <Style Selector=":is(Button).alert">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource AlertGradient}" />
    </Style>

    <!--  Alert button (hover)  -->
    <Style Selector=":is(Button).alert:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource AlertHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).alert:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource AlertGradient}" />
    </Style>

    <!--  Danger button  -->
    <Style Selector=":is(Button).danger">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource DangerGradient}" />
    </Style>

    <!--  Danger button (hover)  -->
    <Style Selector=":is(Button).danger:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource DangerHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).danger:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource DangerGradient}" />
    </Style>

    <!--  Success button  -->
    <Style Selector=":is(Button).success">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource SuccessGradient}" />
    </Style>

    <!--  Success button (hover)  -->
    <Style Selector=":is(Button).success:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource SuccessHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).alert:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Background" Value="{DynamicResource SuccessHoverGradient}" />
    </Style>

    <!--  Subtle button  -->
    <Style Selector=":is(Button).subtle">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
    </Style>

    <!--  Subtle button (hover)  -->
    <Style Selector=":is(Button).subtle:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}" />
    </Style>
    <Style Selector=":is(Button).subtle:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}" />
    </Style>

    <!--  Outline button  -->
    <Style Selector=":is(Button).outline">
        <Setter Property="Foreground" Value="{DynamicResource ActiveGradientText}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveGradient}" />

        <!--  Alert  -->
        <Style Selector="^.alert">
            <Setter Property="BorderBrush" Value="{DynamicResource AlertGradient}" />
            <Setter Property="Foreground" Value="{DynamicResource AlertGradient}" />
        </Style>
        <!--  Danger  -->
        <Style Selector="^.danger">
            <Setter Property="BorderBrush" Value="{DynamicResource DangerGradient}" />
            <Setter Property="Foreground" Value="{DynamicResource DangerGradient}" />
        </Style>
        <!--  Success  -->
        <Style Selector="^.success">
            <Setter Property="BorderBrush" Value="{DynamicResource SuccessGradient}" />
            <Setter Property="Foreground" Value="{DynamicResource SuccessGradient}" />
        </Style>
    </Style>

    <!--  Outline button (hover)  -->
    <Style Selector=":is(Button).outline:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).outline:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource ActiveHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveHoverGradient}" />
    </Style>

    <!--  Outline alert (hover)  -->
    <Style Selector=":is(Button).outline.alert:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource AlertHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AlertHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).outline.alert:pointerover">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource AlertHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AlertHoverGradient}" />
    </Style>

    <!--  Outline danger (hover)  -->
    <Style Selector=":is(Button).outline.danger:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DangerHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DangerHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).outline.danger:pointerover">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DangerHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DangerHoverGradient}" />
    </Style>

    <!--  Outline success (hover)  -->
    <Style Selector=":is(Button).outline.success:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SuccessHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessHoverGradient}" />
    </Style>
    <Style Selector=":is(Button).outline.success:pointerover">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource SuccessHoverGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessHoverGradient}" />
    </Style>

    <!--  Transparent button (hover)  -->
    <Style Selector=":is(Button).transparent:pointerover /template/ ContentPresenter">
        <Setter Property="RenderTransform" Value="scale(1.2)" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style Selector=":is(Button).transparent:pointerover">
        <Setter Property="RenderTransform" Value="scale(1.2)" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--  Transparent button animation  -->
    <Style Selector=":is(Button) /template/ ContentPresenter">
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Foreground" Duration="0:0:0.1" />
                <BrushTransition Property="Background" Duration="0:0:0.1" />
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
            </Transitions>
        </Setter>
    </Style>
    <Style Selector=":is(Button)">
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Foreground" Duration="0:0:0.1" />
                <BrushTransition Property="Background" Duration="0:0:0.1" />
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
            </Transitions>
        </Setter>
    </Style>

    <!--  Transparent button  -->
    <Style Selector=":is(Button).transparent">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--  Transparent button icon only label  -->
    <Style Selector=":is(Button).transparent Label.icon-only">
        <Setter Property="FontFamily" Value="{DynamicResource Phosphor}" />
    </Style>

    <!--  Active button  -->
    <Style Selector=":is(Button).active /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
    </Style>
    <Style Selector=":is(Button).active">
        <Setter Property="Background" Value="{DynamicResource HoverGradient}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
    </Style>

</Styles>
